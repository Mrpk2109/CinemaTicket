import { OverpassOptions } from "./overpass";
export declare const humanReadableBytes: (bytes: number) => string;
export declare const matchAll: (regex: RegExp, string: string) => string[];
export declare const sleep: (ms: number) => Promise<unknown>;
export declare const consoleMsg: (msg: string) => void;
export declare class OverpassError extends Error {
    constructor(message: string);
}
export declare const endpointName: (endpoint: string) => string;
export interface OverpassQuery {
    name: string | null;
    output: "raw" | "json" | "xml" | "csv" | "stream";
    query: string;
    options: OverpassOptions;
}
export declare const defaultOverpassQuery: {};
export declare const buildQueryObject: (query: string | Partial<OverpassQuery>, overwriteObj?: {
    name?: string;
    output?: "raw" | "json" | "xml" | "csv" | "stream";
    options?: Partial<OverpassOptions>;
}) => OverpassQuery;
